C51 COMPILER V9.59.0.0   KEY                                                               12/16/2024 17:10:15 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\Software\Keilv5\Keil\Core\C51\BIN\C51.EXE key.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          
   3          u8 key_code=0;
   4          
   5          u8 getkeybtn()
   6          {
   7   1              u8 tmp=0;
   8   1              if(!P30)tmp+=7;
   9   1              if(!P31)tmp+=6;
  10   1              if(!P32)tmp+=5;
  11   1              if(!P33)tmp+=4;
  12   1              return tmp;
  13   1      }
  14          
  15          u8 getkey22()
  16          {
  17   1              u8 tmp=0;
  18   1              P33=1;P32=0;
  19   1              P44=1;P42=1;
  20   1              if(!P44)tmp+=5;
  21   1              if(!P42)tmp+=9;
  22   1              P33=0;P32=1;
  23   1              P44=1;P42=1;
  24   1              if(!P44)tmp+=4;
  25   1              if(!P42)tmp+=8;
  26   1              
  27   1              return tmp;
  28   1      }
  29          
  30          void key_scan()
  31          {
  32   1              static u8 k_state = 0;
  33   1              static u8 _key=0;
  34   1              static u8 _cnt=0;
  35   1              u8 k_tmp;
  36   1              
  37   1              k_tmp=getkey22();
  38   1              switch(k_state)
  39   1              {
  40   2                      case 0:
  41   2                              if(k_tmp)k_state=1; // 如果检测到有键按下，则进入状态1
  42   2                      break;
  43   2                      case 1:
  44   2                              if(k_tmp)// 如果持续检测到键按下，则进一步判断是哪个键
  45   2                              {
  46   3                                      _key=k_tmp;
  47   3                                      if(_key==17)// 如果是特定的键（例如数字17），则进入状态3
  48   3                                      {
  49   4                                              k_state=3;
  50   4                                              _cnt=0;
  51   4                                      }
  52   3                                      else if(_key==8 || _key== 5)// 如果是其他特定的键（例如数字8或5），则进入状态4
  53   3                                      {
  54   4                                              k_state=4;
C51 COMPILER V9.59.0.0   KEY                                                               12/16/2024 17:10:15 PAGE 2   

  55   4                                              _cnt=0;
  56   4                                      }else
  57   3                                      k_state=2; // 对于其他键，进入状态2
  58   3                              }else k_state=0; // 如果键释放，则回到初始状态0
  59   2                              break;
  60   2                      case 2:
  61   2                              if(!k_tmp)// 如果键释放，则记录键值并回到初始状态0
  62   2                              {
  63   3                                      key_code=_key;
  64   3                                      k_state=0;
  65   3                              }
  66   2                      break;
  67   2                      case 3:
  68   2                              if(k_tmp) // 如果是长按特定键（例如数字17），在达到一定时间长按后进入状态3
             -0
  69   2                              {
  70   3                                      if(++_cnt>=50)
  71   3                                      {
  72   4                                              key_code=17;//累加
  73   4                                              k_state=30;
  74   4                                      }
  75   3                              }else k_state=0;
  76   2                      break;
  77   2                      case 30:
  78   2                              if(!k_tmp)
  79   2                              {
  80   3                                      k_state=0;
  81   3                              }
  82   2                      break;
  83   2                              
  84   2                      case 4:
  85   2                              if(k_tmp)// 对于其他特定键（例如数字8或5），在长按一段时间后发送键值
  86   2                              {
  87   3                                      if(++_cnt>=50)
  88   3                                      {
  89   4                                              _cnt-=5;//反复触发-长按累加
  90   4                                              key_code=_key;
  91   4                                      }
  92   3                              }else // 如果键释放，则发送键值并回到初始状态0
  93   2                              {
  94   3                                      key_code=_key;
  95   3                                      k_state=0;
  96   3                              }
  97   2                      break;
  98   2              }
  99   1      }
 100          
 101          // 处理键盘事件的函数
 102          void key_proc()
 103          {
 104   1          // 执行键盘扫描
 105   1          key_scan();
 106   1          // 根据按键代码处理不同的逻辑
 107   1          switch(key_code)
 108   1          {
 109   2              case 4:
 110   2                  switch(cj.state)// 根据当前状态改变状态
 111   2                  {
 112   3                      case 10:cj.state=20;break;
 113   3                      case 20:cj.state=30;break;
 114   3                      case 30:cj.state=40;break;
 115   3                      case 40:cj.state=10;break;
C51 COMPILER V9.59.0.0   KEY                                                               12/16/2024 17:10:15 PAGE 3   

 116   3                  }
 117   2              break;
 118   2              case 5:
 119   2                  // 在特定状态下增加键值
 120   2                  switch(cj.state)
 121   2                  {
 122   3                      case 20:if(++cj.key>=100)cj.key=0;break;
 123   3                  }
 124   2              break;
 125   2              case 8:
 126   2                  // 在特定状态下减少键值
 127   2                  switch(cj.state)
 128   2                  {
 129   3                      case 20:if(--cj.key>=100)cj.key=100;break;
 130   3                  }
 131   2              break;
 132   2              case 9:
 133   2                  // 保留为空，以便未来扩展
 134   2              break;
 135   2              case 17:
 136   2                  cj.key=0;// 重置键值
 137   2              break;
 138   2          }
 139   1          key_code=0;// 重置按键代码以准备下一次键盘事件
 140   1      }
 141          
 142          
 143          
 144          
 145          
 146          
 147          
 148          
 149          
 150          
 151          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
