C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "all.h"
   2          xdata struct caiji cj;
   3          //led
   4          volatile u8 bdata led_dat = 0;
   5          sbit L1 = led_dat ^ 0;
   6          sbit L2 = led_dat ^ 1;
   7          sbit L3 = led_dat ^ 2;
   8          sbit L4 = led_dat ^ 3;
   9          sbit L5 = led_dat ^ 4;
  10          sbit L6 = led_dat ^ 5;
  11          sbit L7 = led_dat ^ 6;
  12          sbit L8 = led_dat ^ 7;
  13          //
  14          u8 run_state;
  15          //
  16          //**************************
  17          void main_init();
  18          void time_mainloop();
  19          void key_mainloop();
  20          void state_mainloop();
  21          void rtc_mainloop();
  22          void adc_mainloop();
  23          void wave_mainloop();
  24          void led_mainloop();
  25          float deal_dac_out(float _dat);
  26          void calcu_wave();
  27          void calcu();//采集数值计算
  28          void calcu_dac();//计算dac输出
  29          //**************************
  30          void main()
  31          {
  32   1              main_init();
  33   1              EA=1;
  34   1              while(1)
  35   1              {
  36   2                      key_mainloop();
  37   2                      state_mainloop();
  38   2                      rtc_mainloop();
  39   2                      adc_mainloop();
  40   2                      wave_mainloop();
  41   2                      led_mainloop();
  42   2              }
  43   1      }
  44          //**************************
  45          void main_init()
  46          {
  47   1              Timer1_Init();
  48   1              
  49   1              off(JDQ);off(FMQ);
  50   1              CMOD=CH=CL=0;//PCA_INIT
  51   1              
  52   1              rtc_init();
  53   1              rtc_run(0x20,0x20,0x00);
  54   1              
C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 2   

  55   1              init_ad(0x41);
  56   1              
  57   1              run_state = 10;
  58   1              
  59   1              cj.d_dat = 0;//距离数据 //>=80
  60   1              cj.d_all = 0;
  61   1              cj.d_cnt = 0;
  62   1              cj.d_max = 0;//最大值
  63   1              cj.d_aver = 0;//平均值
  64   1              cj.d_min = 0;//最小值
  65   1              cj.d_set = 20;//距离参数  10~80    20
  66   1              cj.set_tmp=20;
  67   1              cj.d_tim = 2;//采集时间  2 3 5 7 9   2
  68   1              cj.tim_tmp=2;
  69   1              cj.mode = 1;//数据切换  1最大，2最小，3平均
  70   1              cj.f_cf = 0xff;//触发切换定时
  71   1              cj.cf_3 = 0;//连续
  72   1              cj.adc = 0;//now_adc
  73   1              cj.hour=20;
  74   1              cj.min=20;
  75   1              cj.sec=0;
  76   1      }
  77          //**************************
  78          void state_mainloop()
  79          {
  80   1              if(!f_100ms_state)return;
  81   1              f_100ms_state = 0;
  82   1              
  83   1              switch(run_state)
  84   1              {
  85   2                      case 10: //时间界面 
  86   2                              sprintf(dis_str,"%02bu-%02bu-%02bu",cj.hour,cj.min,cj.sec);
  87   2                              break;
  88   2                      //
  89   2                      case 11: //测距
  90   2                              if(cj.f_cf)
  91   2                              {
  92   3                                      sprintf(dis_str,"LC   %3d",cj.d_dat);
  93   3                              }else
  94   2                              {
  95   3                                      sprintf(dis_str,"LF   %3d",cj.d_dat);   
  96   3                              }
  97   2                              break;
  98   2                      //
  99   2                      case 12: //数据记录
 100   2                              if(cj.mode == 1)
 101   2                              {
 102   3                                      sprintf(dis_str,"H*  %4d",cj.d_max);
 103   3                              }else if(cj.mode == 2)
 104   2                              {
 105   3                                      sprintf(dis_str,"H-  %5.1f",cj.d_aver);
 106   3                              }else if(cj.mode == 3)
 107   2                              {
 108   3                                      sprintf(dis_str,"H_  %4d",cj.d_min);
 109   3                              }
 110   2                              break;
 111   2                      //
 112   2                      case 20: //参数时间
 113   2                              sprintf(dis_str,"P1    0%1d",cj.tim_tmp);
 114   2                              break;
 115   2                      //
 116   2                      case 21: //参数设置
C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 3   

 117   2                              sprintf(dis_str,"P2    %2d",cj.set_tmp);
 118   2                              break;
 119   2                      //
 120   2              }
 121   1              disp_proc();    
 122   1      }
 123          //**************************
 124          void key_mainloop()
 125          {       
 126   1              if(!f_20ms_key)return ;
 127   1              f_20ms_key = 0;
 128   1              
 129   1              key_proc();
 130   1              
 131   1              if(!key_code)return;
 132   1              
 133   1              switch(key_code)
 134   1              {
 135   2                      //
 136   2                      case 4:
 137   2                              switch(run_state)
 138   2                              {
 139   3                                      case 10://时间显示到测距
 140   3                                      case 11://距离显示
 141   3                                      case 12:run_state=20;break;//数据记录
 142   3                                      case 20:
 143   3                                      case 21:
 144   3                                                      cj.d_tim = cj.tim_tmp;//保存时间
 145   3                                                      cj.d_set=cj.set_tmp ;//保存参数
 146   3                                                      run_state=10;break;//参数设置返回
 147   3                              }
 148   2                              break;
 149   2                      //
 150   2                      case 5:
 151   2                              switch(run_state)
 152   2                              {
 153   3                                      case 10:run_state=11;break;//时间显示到测距模式
 154   3                                      case 11:run_state=12;cj.mode = 1;break;//测距到距离显示计算
 155   3                                      case 12:run_state=10;break;//数据记录
 156   3                                      case 20:run_state=21;break;//参数设置时间//距离数据显示
 157   3                                      case 21:run_state=20;break;//参数设置距离
 158   3                              }
 159   2                              break;
 160   2                      //
 161   2                      case 8:
 162   2                              switch(run_state)
 163   2                              {
 164   3                                      case 11:cj.f_cf =~ cj.f_cf;break;//切换定时触发模式
 165   3                                      case 12:if(++cj.mode > 3) cj.mode = 1;break;//距离显示
 166   3                              }
 167   2                              break;
 168   2                      //
 169   2                      case 9:                 
 170   2                              switch(run_state)
 171   2                              {
 172   3                                      case 20:
 173   3                                              switch(cj.tim_tmp)
 174   3                                              {
 175   4                                                      case 2: cj.tim_tmp = 3;break;
 176   4                                                      case 3: cj.tim_tmp = 5;break;
 177   4                                                      case 5: cj.tim_tmp = 7;break;
 178   4                                                      case 7: cj.tim_tmp = 9;break;
C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 4   

 179   4                                                      case 9: cj.tim_tmp = 2;break;
 180   4                                              }
 181   3                                              break;//参数设置时间
 182   3                                      case 21:
 183   3                                              cj.set_tmp += 10;
 184   3                                              if(cj.set_tmp > 80) cj.set_tmp = 10;break;//参数设置距离
 185   3                              }
 186   2                              break;
 187   2              }
 188   1              key_code = 0;
 189   1      }
 190          //**************************
 191          void rtc_mainloop()
 192          {
 193   1              u8 hour,min,sec;
 194   1              if(!f_100ms_rtc)return;
 195   1              f_100ms_rtc=0;
 196   1              
 197   1              hour=Read_Ds1302_Byte(0x85);
 198   1              min=Read_Ds1302_Byte(0x83);
 199   1              sec=Read_Ds1302_Byte(0x81);
 200   1              if(cj.sec==sec)return;
 201   1              cj.hour=10*(hour>>4)+(hour&0x0f);
 202   1              cj.min=10*(min>>4)+(min&0x0f);
 203   1              cj.sec=10*(sec>>4)+(sec&0x0f);
 204   1      }
 205          //**************************
 206          bit f_led_L6 = 0;//判断L6是否亮灭
 207          
 208          #define LIGHT 50
 209          #define DARK 15
 210          bit f_dark=1;
 211          //**************************
 212          void adc_mainloop()
 213          {
 214   1              u8 adc_temp = 0;//adc
 215   1              
 216   1              if(!f_100ms_adc)return;
 217   1              f_100ms_adc=0;
 218   1              
 219   1              read_ad();
 220   1              adc_temp=read_ad();
 221   1              cj.adc=100.0 *adc_temp /255.0 ;
 222   1              
 223   1              
 224   1              if(cj.f_cf)//触发
 225   1              {
 226   2                      if(!f_dark && cj.adc<DARK && run_state >=20)//亮转暗
 227   2                      {
 228   3                              f_dark=1;
 229   3                      }
 230   2                      if(f_dark && cj.adc>LIGHT)
 231   2                      {
 232   3                              f_dark=0;
 233   3                      }
 234   2              }else//定时
 235   1              {
 236   2                      if(cj.adc>LIGHT)
 237   2                              f_dark=0;
 238   2                      else if(cj.adc<DARK)
 239   2                              f_dark=1;
 240   2              }
C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 5   

 241   1              
 242   1              if(!f_dark) //光场景L6亮
 243   1              {f_led_L6 = 1;}
 244   1              else { f_led_L6 = 0; }
 245   1              
 246   1              calcu_dac();
 247   1              calcu();
 248   1      
 249   1      }
 250          //**************************
 251          void calcu_dac()//计算dac输出
 252          {
 253   1              if(cj.d_dat <= 10)//dac输出
 254   1              {
 255   2                      write_dac(51);  
 256   2              }
 257   1              else if(cj.d_dat >= 80)
 258   1              {
 259   2                      write_dac(255);
 260   2              }else
 261   1              {
 262   2                      write_dac(deal_dac_out(1.0*cj.d_dat)/5.0 * 255);//dac输出
 263   2              }
 264   1      }
 265          //**************************
 266          float deal_dac_out(float _dat)
 267          {
 268   1              float temp = 0;
 269   1              temp = (4.0*_dat)/70.0 + (3/7.0);
 270   1              return temp + 0.1;
 271   1      }
 272          //**************************
 273          void calcu()//采集数值计算
 274          {
 275   1              if(cj.d_dat >= cj.d_max)  cj.d_max = cj.d_dat;//计算
 276   1              if(cj.d_dat <= cj.d_min)  cj.d_min = cj.d_dat;
 277   1              
 278   1              //平均值与第一次计算处理
 279   1              if (cj.d_cnt == 1)
 280   1              {
 281   2                      cj.d_aver = cj.d_all / (float)cj.d_cnt;
 282   2                      cj.d_min = cj.d_dat;
 283   2              }else if(cj.d_cnt > 1)
 284   1              {
 285   2                      cj.d_aver = cj.d_all / (float)cj.d_cnt;
 286   2              }
 287   1      }
 288          //*******************************
 289          void wave_mainloop()
 290          {
 291   1              static u8 old_sec=0xff;//定时模式触发//上次触发秒数
 292   1              
 293   1              if(!f_100ms_wave) return;
 294   1              f_100ms_wave = 0;
 295   1              
 296   1              if(run_state >= 20)return;//参数模式不触发
 297   1              
 298   1              if(cj.f_cf)//触发
 299   1              {
 300   2                      if(!f_dark && cj.adc<DARK)//亮转暗
 301   2                      {
 302   3                              f_dark=1;
C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 6   

 303   3                              calcu_wave();
 304   3                      }
 305   2                      
 306   2              }else//定时
 307   1              {
 308   2                      if(!(cj.sec % cj.d_tim)) 
 309   2                      {
 310   3                              if(cj.sec ==old_sec)return;//仅触发一次
 311   3                              old_sec=cj.sec;
 312   3                              calcu_wave();
 313   3                      }
 314   2              }
 315   1      }
 316          //**************************
 317          void calcu_wave()//计算采集d
 318          {
 319   1              cj.d_dat = read_d()*0.017f;
 320   1              if(cj.d_dat>=999)cj.d_dat=999;
 321   1              cj.d_cnt++;
 322   1              cj.d_all += cj.d_dat;
 323   1              
 324   1              if(cj.f_cf)return;//仅定时模式
 325   1              
 326   1              if((cj.d_dat <= (cj.d_set + 5)) && (cj.d_dat >= (cj.d_set - 5)))//连续采集亮灯L5
 327   1              { 
 328   2                      if(++cj.cf_3 >= 3) cj.cf_3 = 3;
 329   2              }
 330   1              else{cj.cf_3 = 0;}
 331   1      }
 332          //**************************
 333          void led_mainloop(void)
 334          {       
 335   1              if (!f_100ms_led) return;
 336   1              f_100ms_led = 0;
 337   1              
 338   1              switch(run_state)
 339   1              {
 340   2                      case 10:
 341   2                              L1 = 1;L2 = 0;L3 = 0;L4 = 0;L5 = 0;
 342   2                      break;
 343   2                      //
 344   2                      case 11:
 345   2                              L1 = 0;L2 = 1;L3 = 0;
 346   2                              if(cj.f_cf)
 347   2                              {
 348   3                                      L4 = 1;
 349   3                              }else L4 = 0;
 350   2                              
 351   2                              if(cj.cf_3 >= 3)
 352   2                              {
 353   3                                      L5 = 1;
 354   3                              }else
 355   2                              {
 356   3                                      L5 = 0;
 357   3                              }
 358   2                      break;
 359   2                      //
 360   2                      case 12:
 361   2                              L2 = 0;L1 = 0;L3 = 1;L4 = 0;L5 = 0;
 362   2                      break;
 363   2                      case 20:
 364   2                              L2 = 0;L1 = 0;L3 = 0;L4 = 0;L5 = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              05/17/2024 13:42:33 PAGE 7   

 365   2                      break;
 366   2                      case 21:
 367   2                              L2 = 0;L1 = 0;L3 = 0;L4 = 0;L5 = 0;
 368   2                      break;
 369   2              }
 370   1      
 371   1              if(f_led_L6)
 372   1                      L6 = 1;
 373   1              else
 374   1                      L6 = 0;
 375   1      }
 376          //**************************
 377                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1601    ----
   CONSTANT SIZE    =     83    ----
   XDATA SIZE       =     29    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
