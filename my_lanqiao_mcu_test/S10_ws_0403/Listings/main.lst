C51 COMPILER V9.60.7.0   MAIN                                                              04/11/2024 20:10:50 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          1）把每个赛题程序都当成  竞赛时的最终上传程序
   3          2）工程包含的模块只能是竞赛时会写出来的模块
   4          3）题目要逐行仔细分析，注意每一个细节要求。
   5          4）程序编好后，认真修改，严格要求。
   6          5）参考的只能是思路，实现要完全靠自己。
   7          6）重要内容要有注释
   8          */
   9          #include "all.h"
  10          //
  11          volatile u8 bdata led_dat = 0;
  12          sbit L1 = led_dat ^0;
  13          sbit L2 = led_dat ^1;
  14          sbit L3 = led_dat ^2;
  15          sbit L4 = led_dat ^3;
  16          sbit L5 = led_dat ^4;
  17          sbit L6 = led_dat ^5;
  18          sbit L7 = led_dat ^6;
  19          sbit L8 = led_dat ^7;
  20          //
  21          xdata struct _cj x;
  22          //
  23          u8 run_state = 0;
  24          u8 cnt_5s = 0;//按键重置5秒刷新
  25          //
  26          void main_init(void);
  27          void state_mainloop(void);
  28          void key_mainloop(void);
  29          void led_mainloop(void);
  30          //
  31          void Delay5ms(void);
  32          void word_proc(void);
  33          void time_proc(void);
  34          //*******************************
  35          void main(void)
  36          {
  37   1              main_init();
  38   1              EA = 1;
  39   1              while(1)
  40   1              {
  41   2                      state_mainloop();
  42   2                      key_mainloop();
  43   2                      led_mainloop();
  44   2              }
  45   1      }
  46          //****************************
  47          void main_init(void)
  48          {
  49   1              u8 tmp,i;
  50   1              
  51   1              off(JDQ);off(FMQ);
  52   1              led_dat = 0;    
  53   1              Timer1_Init();
  54   1              
C51 COMPILER V9.60.7.0   MAIN                                                              04/11/2024 20:10:50 PAGE 2   

  55   1              tmp=read_e2prom(0x06);//0~5为密码地址6为判断地址
  56   1              if(!tmp)//tmp=0 数据有效
  57   1              {
  58   2                      for (i = 0; i < 6; i++) 
  59   2                      {
  60   3                              x.w[i] = read_e2prom(0x00 +i); //
  61   3                      }
  62   2              }
  63   1              else//tmp不是0，说明第一次写
  64   1              {
  65   2                      for (i = 0; i < 6; i++) 
  66   2                      {
  67   3                              write_e2prom(0x00 + i, 8);//8
  68   3                              x.w[i] = 8;
  69   3                      }
  70   2                      write_e2prom(0x06,0x00);//确认已通电
  71   2              }
  72   1              //
  73   1              run_state = 10;
  74   1              x.i = 0;
  75   1              x.n = 6;
  76   1      }
  77          //****************************
  78          void state_mainloop(void)
  79          {
  80   1              static u8 index = 0;//判断密码索引
  81   1              u8 i = 0;
  82   1              //
  83   1              if(!f_100ms_state) return;
  84   1              f_100ms_state = 0;
  85   1              
  86   1              switch(run_state)
  87   1              {
  88   2                      case 10://初始界面全灭
  89   2                              sprintf(dis_str,"        ");
  90   2                      break;
  91   2                      case 20://输入
  92   2                              sprintf(dis_str,"- "); // 先添加一个连字符
  93   2                              word_proc();
  94   2                              if(x.i == 6)//输入6位密码时判断
  95   2                              {
  96   3                                      for(i = 0;i<6;i++)
  97   3                                              if(x.w[i] == x.w_put[i]) index++;//判断正确
  98   3                                      //
  99   3                                      if(index == 6)//正确//index为判断密码几位正确,6位全对算正确
 100   3                                      {
 101   4                                              run_state = 30;index=0;
 102   4                                      }else//错误
 103   3                                      {
 104   4                                              run_state = 40; index=0;
 105   4                                      }
 106   3                              }
 107   2                      break;
 108   2                      case 30://open
 109   2                              sprintf(dis_str,"0   0PEN");
 110   2                      break;
 111   2                      case 40://fall
 112   2                              sprintf(dis_str,"- "); // 先添加一个连字符
 113   2                              word_proc();
 114   2                      break;
 115   2                      case 50://set修改密码
 116   2                              sprintf(dis_str,"C ");
C51 COMPILER V9.60.7.0   MAIN                                                              04/11/2024 20:10:50 PAGE 3   

 117   2                              word_proc();
 118   2                      break;
 119   2              }
 120   1              disp_tran();
 121   1      }
 122          //******************************
 123          void word_proc(void)//数码管输入密码显示//移位退位处理
 124          {
 125   1              u8 temp_str[6];//缓存输入密码数组
 126   1              u8 i = 0;
 127   1              //
 128   1              for(i = 0; i < x.n-x.i; i++)//
 129   1                      strcat(dis_str, " "); // 添加所需数量的空格
 130   1              for(i = 0; i < x.i; i++)
 131   1              {
 132   2                      sprintf(temp_str,"%d",(int)x.w_put[i]); // 将数字格式化到 temp_str
 133   2                      strcat(dis_str, temp_str); // 将 temp_str 连接到 dis_str
 134   2              }
 135   1      }
 136          //*************************************
 137          void time_proc(void)//5秒时间处理以及部分和LED相关操作
 138          {
 139   1              switch(run_state)
 140   1              {
 141   2                      case 10://初始
 142   2                              off(JDQ);
 143   2                      break;
 144   2                      case 30://开门
 145   2      
 146   2                      case 50://修改密码
 147   2                              on(JDQ);
 148   2                              if(!f_1s)return;
 149   2                              f_1s = 0;
 150   2                              if(++cnt_5s >= 5)
 151   2                              {
 152   3                                      cnt_5s = 0;
 153   3                                      run_state = 10;//返回
 154   3                                      led_dat = 0;//off led smg
 155   3                                      x.i = 0;//重置输入密码
 156   3                              }
 157   2                      break;
 158   2                      case 40://错误
 159   2                              L1 = 1;
 160   2                              if(!f_1s)return;
 161   2                              f_1s = 0;
 162   2                              if(++cnt_5s >= 5)
 163   2                              {
 164   3                                      cnt_5s = 0;
 165   3                                      L1 = 0;
 166   3                                      x.i = 0;//重置输入密码
 167   3                                      run_state = 10;//返回
 168   3                              }
 169   2                      break;
 170   2              }
 171   1      }
 172          //************************
 173          void key_mainloop(void)
 174          {
 175   1              u8 _i = 0;
 176   1              if(!f_20ms_key)return;
 177   1              f_20ms_key = 0;
 178   1              
C51 COMPILER V9.60.7.0   MAIN                                                              04/11/2024 20:10:50 PAGE 4   

 179   1              key_proc();
 180   1              if(key_code==10)return;//10为空
 181   1              
 182   1              switch(run_state)//按键输入0~9判断
 183   1              {
 184   2                      case 20://输入密码
 185   2                              if(key_code>=0 && key_code<= 9)
 186   2                              {
 187   3                                      if(x.i ==6)return;
 188   3                                      x.w_put[x.i]=key_code;
 189   3                                      x.i++;//限制
 190   3                              }
 191   2                      break;
 192   2                      case 50://修改密码
 193   2                              if(key_code>=0 && key_code<= 9)
 194   2                              {
 195   3                                      cnt_5s = 0;//开门下按键刷新5s
 196   3                                      if(x.i ==6)return;
 197   3                                      x.w_put[x.i]=key_code;
 198   3                                      x.i++;//限制
 199   3                              }
 200   2              }
 201   1              //
 202   1              switch(key_code)//按键清除修改和输入
 203   1              {
 204   2                      case S8://清除
 205   2                              switch(run_state)
 206   2                              {
 207   3                                      case 20:
 208   3                                      case 50:
 209   3                                      x.w_put[x.i]=0;
 210   3                                      if(--x.i >6)x.i = 0;//限制                                      
 211   3                                      break;
 212   3                              }
 213   2                      break;
 214   2                      //
 215   2                      case S12: //开门后修改密码
 216   2                              switch(run_state)
 217   2                              {
 218   3                                      case 30:run_state = 50;x.i = 0;cnt_5s = 0;break;//x.i=0重置dis_str的空格    重置刷新5scnt
 219   3                                      case 50:
 220   3                                              cnt_5s = 0;                                     
 221   3                                              if(x.i >=6)
 222   3                                              {
 223   4                                                      write_e2prom(0x06,0);
 224   4                                                      run_state =30;//保存返回开门
 225   4                                                      for(_i = 0;_i < 6;_i++)
 226   4                                                      {
 227   5                                                              x.w[_i] = x.w_put[_i];
 228   5                                                              write_e2prom(_i,x.w[_i]);//写入eeprom密码
 229   5                                                      }
 230   4                                              }
 231   3                                      break;
 232   3                              }
 233   2                      break;
 234   2                      //
 235   2                      case S16://输入
 236   2                              switch(run_state)//初始界面
 237   2                              {
 238   3                                      case 10:run_state = 20;break;
 239   3                              }
 240   2                      break;
C51 COMPILER V9.60.7.0   MAIN                                                              04/11/2024 20:10:50 PAGE 5   

 241   2                      
 242   2                      case S8L:
 243   2                              switch(run_state)
 244   2                              {
 245   3                                      case 20:
 246   3                                      case 50:
 247   3                                      x.i = 0;//清空                          
 248   3                                      break;
 249   3                              }
 250   2                      break;
 251   2                                      
 252   2              }
 253   1              key_code = 10;//10为空
 254   1      }
 255          //************************
 256          void led_mainloop(void)
 257          {
 258   1              if(!f_100ms_led)return;
 259   1              f_100ms_led = 0;
 260   1              
 261   1              led_dat = 0;
 262   1              switch(run_state)
 263   1              {
 264   2                      case 20:L7 = 1;break;//输入
 265   2                      case 50:L8 = 1;break;
 266   2              }
 267   1              time_proc();
 268   1              
 269   1              P0 = ~led_dat;
 270   1              gate(LED);      
 271   1      }
 272          //*********************
 273          
 274          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    871    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =     14    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
