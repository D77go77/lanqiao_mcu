C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 16:05:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "all.h"
   2          xdata struct caiji cj;
   3          //led 
   4          volatile u8 bdata led_dat = 0;
   5          sbit L1 = led_dat ^ 0;
   6          sbit L2 = led_dat ^ 1;
   7          sbit L3 = led_dat ^ 2;
   8          sbit L4 = led_dat ^ 3;
   9          sbit L5 = led_dat ^ 4;
  10          sbit L6 = led_dat ^ 5;
  11          sbit L7 = led_dat ^ 6;
  12          sbit L8 = led_dat ^ 7;
  13          //
  14          u8 run_state=10;
  15          bit f_led_1=0;
  16          //
  17          void main_init();
  18          void state_mainloop();
  19          void key_mainloop();
  20          void wave_mainloop();
  21          void adc_mainloop();
  22          void led_mainloop();
  23          //***********************
  24          void main()
  25          {
  26   1              main_init();
  27   1              EA=1;
  28   1              while(1)
  29   1              {
  30   2                      state_mainloop();
  31   2                      key_mainloop();
  32   2                      wave_mainloop();
  33   2                      adc_mainloop();
  34   2                      led_mainloop();
  35   2              }
  36   1      }
  37          //***********************
  38          void main_init()
  39          {
  40   1              off(JDQ);off(FMQ);
  41   1              led_dat=0;
  42   1              Timer1_Init();
  43   1              
  44   1              cj. d_old=0;//上次数据
  45   1              cj. d=0;//本次数据
  46   1              cj. d_set=cj.d_tmp=r_e2prom(0x00);//测量盲区
  47   1      
  48   1              cj. index=1;//数据编号
  49   1              cj. dat[4]=r_e2prom(4);
  50   1              cj. dat[1]=r_e2prom(1);
  51   1              cj. dat[2]=r_e2prom(2);
  52   1              cj. dat[3]=r_e2prom(3);;//数据保存使用1~4位
  53   1              
  54   1              cj.f_wave=0;
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 16:05:37 PAGE 2   

  55   1              
  56   1              cj.dac=0;
  57   1      }
  58          //***********************
  59          void state_mainloop()
  60          {
  61   1              if(!f_100ms_state)return;
  62   1              f_100ms_state=0;
  63   1              
  64   1              switch(run_state)
  65   1              {
  66   2                      case 10:sprintf(dis_str,"C %03bu%03bu",cj.d,cj.d_old);break;//测距显示
  67   2                      case 20:sprintf(dis_str,"%bu    %03bu",cj.index,cj.dat[cj.index]);break;//数据回显
  68   2                      case 30:sprintf(dis_str,"F    %3bu",cj.d_tmp);break;//参数设置
  69   2              }
  70   1              disp_proc();
  71   1      }
  72          //***********************
  73          void key_mainloop()
  74          {
  75   1              if(!f_20ms_key)return;
  76   1              f_20ms_key = 0;
  77   1              
  78   1              key_proc();
  79   1              switch(key_code)
  80   1              {
  81   2                      case 4:
  82   2                              if(run_state==10)cj.f_wave=1;//启动
  83   2                      break;
  84   2                              //
  85   2                      case 5:
  86   2                              switch(run_state)
  87   2                              {
  88   3                                      case 10:cj.index=1;run_state = 20;break;
  89   3                                      case 20:run_state = 10;break;
  90   3                                      case 30:cj.index=1;run_state = 20;break;
  91   3                              }
  92   2                      break;
  93   2                              //
  94   2                      case 6:
  95   2                              switch(run_state)
  96   2                              {
  97   3                                      case 10:run_state = 30;break;
  98   3                                      case 20:run_state = 30;break;
  99   3                                      case 30:
 100   3                                              run_state = 10;
 101   3                                              cj.d_set=cj.d_tmp;
 102   3                                              w_e2prom(0x00,cj.d_set);//保存
 103   3                                      break;
 104   3                              }
 105   2                              //
 106   2                      break;
 107   2                      case 7:
 108   2                              switch(run_state)
 109   2                              {
 110   3                                      case 20:
 111   3                                              if(++cj.index>4)cj.index=1;
 112   3                                      break;
 113   3                                      case 30:
 114   3                                              cj.d_tmp+=10;
 115   3                                              if(cj.d_tmp>30)cj.d_tmp=0;
 116   3                                      break;
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 16:05:37 PAGE 3   

 117   3                              }
 118   2                      break;
 119   2              }
 120   1              key_code = 0;
 121   1      }
 122          //***********************
 123          void wave_mainloop()
 124          {
 125   1              static u8 _index=1;//索引
 126   1              
 127   1              if(!cj.f_wave)return;
 128   1              cj.f_wave=0;
 129   1              f_led_1=1;
 130   1              cj.d_old=cj.d;//保存上次
 131   1              cj.d = read_d()*0.017f;
 132   1              cj.dat[_index]=cj.d;
 133   1              w_e2prom(_index,cj.d);//保存
 134   1              if(++_index>4)_index=1;
 135   1      }
 136          //***********************
 137          void adc_mainloop()
 138          {
 139   1              if(!f_100ms_adc)return;
 140   1              f_100ms_adc=0;
 141   1              
 142   1              if(cj.d <= cj.d_set)
 143   1              {
 144   2                      write_dac(0);
 145   2              }else
 146   1              {
 147   2                      cj.dac = (cj.d-cj.d_set)*0.02;
 148   2                      if(cj.dac>=5)
 149   2                              write_dac(255);
 150   2                      else
 151   2                              write_dac(51*cj.dac);
 152   2              }
 153   1      }
 154          //***********************
 155          void led_mainloop()
 156          {
 157   1              static u8 L1_cnt=0;
 158   1              static u8 t_cnt=0;
 159   1              
 160   1              if(!f_100ms_led)return;
 161   1              f_100ms_led=0;
 162   1              
 163   1              if(f_led_1)
 164   1              {
 165   2                      if(++t_cnt>=10)
 166   2                      {
 167   3                              t_cnt=0;
 168   3                              L1=!L1;
 169   3                              if(++L1_cnt>5)
 170   3                              {
 171   4                                      L1_cnt=0;
 172   4                                      L1=0;
 173   4                                      f_led_1=0;
 174   4                              }
 175   3                      }
 176   2              }
 177   1              //
 178   1              switch(run_state)
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 16:05:37 PAGE 4   

 179   1              {
 180   2                      case 10:L7=0;L8=0;break;
 181   2                      case 20:L7=0;L8=1;break;
 182   2                      case 30:L7=1;L8=0;break;
 183   2              }
 184   1      }
 185          //***********************
 186          
 187          
 188          
 189          
 190          
 191          
 192          
 193          
 194          
 195          
 196          
 197          
 198          
 199          
 200          
 201          
 202          
 203          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    633    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =     15    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
