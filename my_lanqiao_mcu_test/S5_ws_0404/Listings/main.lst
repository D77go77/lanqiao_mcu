C51 COMPILER V9.60.7.0   MAIN                                                              04/04/2024 16:21:35 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          1）把每个赛题程序都当成  竞赛时的最终上传程序
   3          2）工程包含的模块只能是竞赛时会写出来的模块
   4          3）题目要逐行仔细分析，注意每一个细节要求。
   5          4）程序编好后，认真修改，严格要求。
   6          5）参考的只能是思路，实现要完全靠自己。
   7          6）重要内容要有注释
   8          */
   9          #include <all.h>
  10          //*******************
  11          xdata struct _cj cj;
  12          u8 state =10;
  13          u8 ledms =0;
  14          //*******************
  15          volatile u8 bdata led_dat =0;
  16          sbit L1 = led_dat ^0;
  17          sbit L2 = led_dat ^1;
  18          sbit L3 = led_dat ^2;
  19          sbit L4 = led_dat ^3;
  20          sbit L5 = led_dat ^4;
  21          sbit L6 = led_dat ^5;
  22          sbit L7 = led_dat ^6;
  23          sbit L8 = led_dat ^7;
  24          //*******************
  25          void init();
  26          void state_mainloop();
  27          void temp_mainloop();
  28          void key_mainloop();
  29          void led_mainloop();
  30          //*******************
  31          void main()
  32          {
  33   1              init();
  34   1              EA =1;
  35   1              while(1)
  36   1              {
  37   2                      state_mainloop();
  38   2                      temp_mainloop();
  39   2                      key_mainloop();
  40   2                      led_mainloop();
  41   2              }
  42   1      }
  43          //*******************
  44          void init()
  45          {
  46   1              Timer1_Init();
  47   1              cj.gap =0;
  48   1              cj.t =0;
  49   1      
  50   1              cj.min = 20;
  51   1              cj.max = 30;
  52   1              start_18B20();
  53   1      }
  54          //*******************
C51 COMPILER V9.60.7.0   MAIN                                                              04/04/2024 16:21:35 PAGE 2   

  55          void state_mainloop()
  56          {
  57   1              if(!f_100ms_state)return;
  58   1              f_100ms_state =0;
  59   1              
  60   1              switch(state)
  61   1              {
  62   2                      case 10:sprintf(disp_str,"-%bu-   %2bu",cj.gap,cj.t);break; //温度显示界面
  63   2                      case 20:sprintf(disp_str,"-    -  ");break;//温度设定界面
  64   2                      case 21:sprintf(disp_str,"-    - %bu",cj.max_10);break;//温度设定界面
  65   2                      case 22:sprintf(disp_str,"-    -%bu%bu",cj.max_10,cj.max_1);break;//温度设定界面
  66   2                      case 23:sprintf(disp_str,"- %bu  -%bu%bu",cj.max_10,cj.max_1,cj.min_10);break;//温度设定界面
  67   2                      case 24:sprintf(disp_str,"-%bu%bu  -%bu%bu",cj.max_10,cj.max_1,cj.min_10,cj.min_1);break;//温度设定界面
  68   2              }
  69   1              
  70   1              disp_tran();
  71   1      }
  72          //*******************
  73          void key_mainloop()
  74          {
  75   1              if(!f_20ms_key)return;
  76   1              f_20ms_key =0;
  77   1              
  78   1              key_proc();
  79   1              
  80   1              switch(key_code)
  81   1              {
  82   2                      case SET:
  83   2                                              switch(state)
  84   2                                              {
  85   3                                                      case 10:state =20;break;
  86   3                                                      case 24:
  87   3                                                                              cj.max = cj.max_10*10 +cj.max_1;
  88   3                                                                              cj.min = cj.min_10*10 +cj.min_1;
  89   3                                                                              state = 10;break;
  90   3                                              }
  91   2                              break;
  92   2                                              
  93   2                      case CLEAR:
  94   2                                              switch(state)
  95   2                                              {
  96   3                                                      case 24:state = 23;cj.min_1 =0;break;
  97   3                                                      case 23:state = 22;cj.min_10 =0;break;
  98   3                                                      case 22:state = 21;cj.max_1 =0;break;
  99   3                                                      case 21:state = 20;cj.max_10 =0;break;
 100   3                                              }
 101   2                              break;                                  
 102   2              }
 103   1              
 104   1              switch(state)
 105   1              {
 106   2                      case 20:
 107   2                                      if(key_code>0 &&key_code<=10)
 108   2                                      {
 109   3                                              if(key_code ==10)
 110   3                                              {
 111   4                                                      key_code -= 10;
 112   4                                                      cj.max_10 = key_code;
 113   4                                                      state = 21;
 114   4                                              }else
 115   3                                              cj.max_10 = key_code;state = 21;
 116   3                                      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/04/2024 16:21:35 PAGE 3   

 117   2                              break;
 118   2                                      
 119   2                      case 21:
 120   2                                      if(key_code>0 &&key_code<=10)
 121   2                                      {
 122   3                                              if(key_code ==10)
 123   3                                              {
 124   4                                                      key_code -= 10;
 125   4                                                      cj.max_1 = key_code;state = 22;
 126   4                                              }else
 127   3                                              cj.max_1 = key_code;state = 22;
 128   3                                      }
 129   2                              break;
 130   2                                      
 131   2                      case 22:
 132   2                                      if(key_code>0 &&key_code<=10)
 133   2                                      {
 134   3                                              if(key_code ==10)
 135   3                                              {
 136   4                                                      key_code -= 10;
 137   4                                                      cj.min_10 = key_code;state = 23;
 138   4                                              }else
 139   3                                              cj.min_10 = key_code;state = 23;
 140   3                                      }
 141   2                              break;
 142   2                                      
 143   2                      case 23:
 144   2                                      if(key_code>0 &&key_code<=10)
 145   2                                      {
 146   3                                              if(key_code ==10)
 147   3                                              {
 148   4                                                      key_code -= 10;
 149   4                                                      cj.min_1 = key_code;state = 24;
 150   4                                              }else
 151   3                                              cj.min_1 = key_code;state = 24;
 152   3                                      }
 153   2                              break;
 154   2              }
 155   1              
 156   1              key_code=0;
 157   1      }
 158          //*******************
 159          void temp_mainloop()
 160          {
 161   1              u16 dat =0;
 162   1              u8 tempi =0;
 163   1              
 164   1              if(!f_100ms_temp)return;
 165   1              f_100ms_temp =0;
 166   1              
 167   1              dat = read_tem16();
 168   1              
 169   1              tempi = dat/16;
 170   1              cj.t = tempi;
 171   1              
 172   1              if(cj.t <cj.min)
 173   1              {
 174   2                      cj.gap =0;crl_off(JDQ);ledms = 8;
 175   2              }
 176   1              if(cj.t>=cj.min &&cj.t<=cj.max)
 177   1              {
 178   2                      cj.gap =1;crl_off(JDQ);ledms = 4;
C51 COMPILER V9.60.7.0   MAIN                                                              04/04/2024 16:21:35 PAGE 4   

 179   2              }
 180   1              if(cj.t>cj.max)
 181   1              {
 182   2                      cj.gap =2;crl_on(JDQ);ledms = 2;
 183   2              }
 184   1              
 185   1              start_18B20();
 186   1      }
 187          //*******************
 188          void led_mainloop()
 189          {
 190   1              static cnt=0;
 191   1              static bit f_blink =0;
 192   1              if(!f_100ms_led)return;
 193   1              f_100ms_led =0;
 194   1              
 195   1              if(++cnt >= ledms&&!f_blink)
 196   1              {
 197   2                      cnt =0;
 198   2                      L1 =0;
 199   2                      f_blink =1;
 200   2              }else if(++cnt >= ledms&&f_blink)
 201   1              {
 202   2                      cnt =0;
 203   2                      f_blink =0;
 204   2                      L1 =1;
 205   2              }
 206   1              
 207   1              if(cj.max<cj.min)
 208   1              {
 209   2                      L2 =1;
 210   2              }
 211   1              else L2 =0;
 212   1              
 213   1              P0 = ~led_dat;
 214   1              gate(LED);
 215   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    763    ----
   CONSTANT SIZE    =     78    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
