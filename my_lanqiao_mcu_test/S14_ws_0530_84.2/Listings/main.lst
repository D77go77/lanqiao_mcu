C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 19:42:48 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "all.h"
   2          //led
   3          volatile u8 bdata led_dat=0;
   4          sbit L1=led_dat^0;
   5          sbit L2=led_dat^1;
   6          sbit L3=led_dat^2;
   7          sbit L4=led_dat^3;
   8          sbit L5=led_dat^4;
   9          sbit L6=led_dat^5;
  10          sbit L7=led_dat^6;
  11          sbit L8=led_dat^7;
  12          
  13          struct _now
  14          {
  15                  u8 h;
  16                  u8 m;
  17                  u8 s;
  18                  //
  19                  u16 f;//频率-->湿度
  20                  u8 rh;//湿度
  21                  u8 t;//温度
  22                  u8 adc; //光敏电阻电压
  23          }now;
  24          
  25          struct _cj
  26          {
  27                  u8 h;
  28                  u8 m;
  29                  
  30                  u8 t;
  31                  u8 t_set;
  32                  u8 t_max;
  33                  float t_avr;
  34                  
  35                  u8 rh;
  36                  u8 rh_max;
  37                  float rh_avr;
  38                  
  39                  u8 cnt;//采集次数
  40          }cj;
  41          
  42          
  43          u8 run_state=11;
  44          u8 run_state_save=11;
  45          
  46          bit f_dark=1;  //1暗  0亮
  47          bit f_wuxiao=0;
  48          bit f_L6=0;
  49          
  50          //******************************************************
  51          void main_init(void);
  52          //
  53          void key_mainloop(void);
  54          void led_mainloop(void);
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 19:42:48 PAGE 2   

  55          void state_mainloop(void);
  56          void temper_mainloop(void);
  57          void rtc_mainloop(void);
  58          void adc_mainloop(void);
  59          void freq_mainloop(void);
  60          void uart_mainloop(void);
  61          void capture(void);
  62          //******************************************************
  63          void main(void)
  64          {
  65   1              main_init();
  66   1              EA = 1;
  67   1              //
  68   1              while (1)
  69   1              {
  70   2                      key_mainloop();
  71   2                      state_mainloop();
  72   2                      rtc_mainloop();         
  73   2                      temper_mainloop();
  74   2                      adc_mainloop();
  75   2                      freq_mainloop();                
  76   2              }
  77   1      }
  78          //******************************************************
  79          void led_mainloop(void)
  80          {
  81   1              led_dat=0;
  82   1              
  83   1              switch(run_state)
  84   1              {
  85   2                      case 11: L1=1; L2=0; L3=0; break;
  86   2                      
  87   2                      case 21:
  88   2                      case 22:
  89   2                      case 23: L1=0; L2=1; L3=0;break;
  90   2                      
  91   2                      case 41: L1=0; L2=0; L3=1;break;
  92   2              }
  93   1              if(cj.t>cj.t_set) L4=f_led;
  94   1              
  95   1              if(f_wuxiao) L5=1;
  96   1              
  97   1              if(f_L6) L6=1;
  98   1              
  99   1              P0 = ~led_dat;
 100   1              P2 = (P2 & 0x1f) | 0x80;
 101   1              P2 &= 0x1f;
 102   1      }
 103          
 104          //******************************************************
 105          void state_mainloop(void)
 106          {
 107   1              static u8 cnt_3=0;
 108   1              
 109   1              if(!f_100ms_state)return;
 110   1              f_100ms_state=0;
 111   1      
 112   1              switch(run_state)
 113   1              {
 114   2                      case 11:   //时间界面
 115   2                              sprintf(dis_str,"%02bu-%02bu-%02bu",now.h,now.m,now.s); break;
 116   2                      
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 19:42:48 PAGE 3   

 117   2                      case 21: //回显界面  温度
 118   2                              if(!cj.cnt) sprintf(dis_str,"C       ");
 119   2                              else sprintf(dis_str,"C %02bu-%4.1f",cj.t_max,cj.t_avr); break;
 120   2                      case 22: //回显界面  湿度
 121   2                              if(!cj.cnt) sprintf(dis_str,"H       ");
 122   2                              else sprintf(dis_str,"H %02bu-%4.1f",cj.rh_max,cj.rh_avr); break;
 123   2                      case 23: //回显界面  时间
 124   2                              if(!cj.cnt) sprintf(dis_str,"F%02bu     ",cj.cnt,cj.h,cj.m);
 125   2                              else sprintf(dis_str,"F%02bu%02bu-%02bu",cj.cnt,cj.h,cj.m); break;
 126   2                      
 127   2                      case 31: //参数界面
 128   2                              sprintf(dis_str,"P     %02bu",cj.t_set); break;
 129   2                      
 130   2                      case 41: //温湿度界面
 131   2                              if(++cnt_3>=30)
 132   2                              {
 133   3                                      run_state=run_state_save;
 134   3                                      cnt_3=0;
 135   3                              }
 136   2                              if(f_wuxiao) sprintf(dis_str,"E  %02bu-AA",now.t);
 137   2                              else sprintf(dis_str,"E  %02bu-%02bu",now.t,cj.rh); break;
 138   2              }
 139   1              disp_tran();
 140   1      
 141   1      }
 142          
 143          //******************************************************
 144          void adc_mainloop(void)
 145          {
 146   1              
 147   1              if (!f_100ms_adc)       return;
 148   1              f_100ms_adc = 0;
 149   1              //
 150   1              
 151   1              read_adc();
 152   1              now.adc = read_adc();
 153   1              
 154   1              if(now.adc>30) f_dark=0;//亮
 155   1              
 156   1              if(now.adc<30 && !f_dark && run_state!=41)
 157   1              {
 158   2                      f_3s=0;
 159   2                      
 160   2                      f_dark=1;//暗
 161   2                      
 162   2                      run_state_save=run_state;
 163   2                      run_state=41;
 164   2                      
 165   2                      if(!f_wuxiao) capture(); //有效采集
 166   2              }
 167   1      
 168   1      }
 169          
 170          //******************************************************
 171          void rtc_mainloop(void)//获取时间
 172          {
 173   1              u8 h,m,s;
 174   1      //      static u8 s_old;
 175   1              
 176   1              if(!f_100ms_rtc) return;
 177   1              f_100ms_rtc=0;
 178   1              
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 19:42:48 PAGE 4   

 179   1              h=Read_Ds1302_Byte(0x85);
 180   1              m=Read_Ds1302_Byte(0x83);
 181   1              s=Read_Ds1302_Byte(0x81);
 182   1              
 183   1              now.h=(h>>4)*10+(h&0x0f);
 184   1              now.m=(m>>4)*10+(m&0x0f);
 185   1              now.s=(s>>4)*10+(s&0x0f);
 186   1      
 187   1      }
 188          //******************************************************
 189          void freq_mainloop(void)
 190          {       
 191   1              if(!f_1s)return;
 192   1              f_1s=0;
 193   1              
 194   1              now.f = (u16)th * 256 +tl;//读取频率
 195   1      
 196   1              if(now.f>=200 && now.f<=2000) //有效
 197   1              {
 198   2                      now.rh=(90.0-10.0)/(2000.0-200.0)*(now.f-200.0)+10;
 199   2                      f_wuxiao=0;
 200   2              }
 201   1              else 
 202   1              {
 203   2                      f_wuxiao=1;
 204   2              }
 205   1      }
 206          //******************************************************
 207          void temper_mainloop(void)
 208          {
 209   1              u16 temp16 = 0;
 210   1              if (!f_800ms_t)         return;
 211   1              f_800ms_t = 0;
 212   1              //
 213   1              temp16 = read_tem16();
 214   1              now.t = temp16 /16.0;
 215   1              start_ds18b20();
 216   1      }
 217          //******************************************************
 218          void main_init(void)
 219          {
 220   1              off(JDQ); off(FMQ);
 221   1              led_dat = 0;    
 222   1              //
 223   1              start_ds18b20();//t
 224   1              init_adc(AD+DA); //光敏
 225   1              ds1302_run(0x10,0x30,0x00);
 226   1              //
 227   1              Timer0_Init();//频率计  
 228   1              Timer1_Init();  //2ms
 229   1              Uart1_Init();
 230   1              
 231   1              now.h=13;
 232   1              now.m=3;
 233   1              now.s=5;
 234   1              
 235   1              cj.t_max=0;
 236   1              cj.t_avr=0;
 237   1              
 238   1              cj.rh_max=0;
 239   1              cj.rh_avr=0;
 240   1              
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 19:42:48 PAGE 5   

 241   1              cj.cnt=0;
 242   1              now.h=0;
 243   1              cj.m=0;
 244   1              cj.t_set=30;
 245   1              cj.t=0;
 246   1              now.rh=0;
 247   1              
 248   1      }
 249          //******************************************************
 250          void key_mainloop(void)
 251          {
 252   1              if(!f_20ms_key)return;
 253   1              f_20ms_key = 0;
 254   1              
 255   1              key_proc();
 256   1              if(!key_code)return;
 257   1              
 258   1              
 259   1              switch(key_code)
 260   1              {
 261   2                      case S4:
 262   2                              switch(run_state)
 263   2                              {
 264   3                                      case 11: run_state=21; break;
 265   3                                      
 266   3                                      case 21:
 267   3                                      case 22:
 268   3                                      case 23: run_state=31; break;
 269   3                                      
 270   3                                      case 31: run_state=11; break;
 271   3                              }
 272   2                              break;
 273   2                      
 274   2                      case S5:
 275   2                              switch(run_state)
 276   2                              {
 277   3                                      
 278   3                                      
 279   3                                      case 21: run_state=22; break;
 280   3                                      case 22: run_state=23; break;
 281   3                                      case 23: run_state=21; break;
 282   3                                      
 283   3                                      
 284   3                              }
 285   2                              break;
 286   2                      
 287   2                      case S8:
 288   2                              switch(run_state)
 289   2                              {
 290   3                                      case 31: if(++cj.t_set>=99) cj.t_set=99;
 291   3                              }
 292   2                              break;
 293   2                      
 294   2                      case S9:
 295   2                              switch(run_state)
 296   2                              {
 297   3                                      case 31: if(--cj.t_set>=99) cj.t_set=0;
 298   3                              }
 299   2                              break;
 300   2                              
 301   2                      case S9L:
 302   2                              switch(run_state)
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 19:42:48 PAGE 6   

 303   2                              {
 304   3                                      case 23://清除触发采集的相关变量
 305   3                                              cj.t_max=0;
 306   3                                              cj.t_avr=0;
 307   3                                              
 308   3                                              cj.rh_max=0;
 309   3                                              cj.rh_avr=0;
 310   3                                              
 311   3                                              cj.cnt=0;
 312   3                                              cj.h=0;
 313   3                                              cj.m=0;
 314   3                                              cj.t=0;
 315   3                                              cj.rh=0;
 316   3                                              
 317   3                              }
 318   2              }
 319   1              
 320   1              key_code=0;
 321   1      }
 322          
 323          
 324          void capture(void)
 325          {
 326   1              cj.cnt++;//第 cj.cnt 次采集
 327   1              
 328   1              if(now.t>cj.t && now.rh>cj.rh && cj.cnt>=2) f_L6=1; //L6点亮标志位
 329   1              else f_L6=0;
 330   1              
 331   1              cj.t=now.t;//触发采集
 332   1              cj.rh=now.rh;
 333   1              
 334   1              cj.h=now.h;//触发采集
 335   1              cj.m=now.m;
 336   1              
 337   1              cj.t_avr=(1.0*cj.t_avr*(cj.cnt-1)+cj.t)/cj.cnt;//求平均值
 338   1              cj.rh_avr=(1.0*cj.rh_avr*(cj.cnt-1)+cj.rh)/cj.cnt;
 339   1              
 340   1              if(cj.t_max<cj.t) cj.t_max=cj.t;//求最大值
 341   1              if(cj.rh_max<now.rh) cj.rh_max=cj.rh;
 342   1              
 343   1              
 344   1      }
 345          
 346          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1130    ----
   CONSTANT SIZE    =    133    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
