C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 14:05:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "all.h"
   2          xdata struct _cj cj;
   3          volatile u8 bdata led_dat = 0;
   4          sbit L1 = led_dat ^ 0;
   5          sbit L2 = led_dat ^ 1;
   6          sbit L3 = led_dat ^ 2;
   7          sbit L4 = led_dat ^ 3;
   8          sbit L5 = led_dat ^ 4;
   9          sbit L6 = led_dat ^ 5;
  10          sbit L7 = led_dat ^ 6;
  11          sbit L8 = led_dat ^ 7;
  12          //
  13          u8 run_state;
  14          //
  15          void main_init();
  16          void state_mainloop();
  17          void key_mainloop();
  18          void wave_mainloop();
  19          void adc_mainloop();
  20          void led_mainloop();
  21          void freq_mainloop(void);
  22          //****************************
  23          void main(void)
  24          {
  25   1              main_init();
  26   1              EA=1;
  27   1              while(1)
  28   1              {
  29   2                      
  30   2                      key_mainloop();
  31   2                      state_mainloop();
  32   2                      wave_mainloop();
  33   2                      adc_mainloop();
  34   2                      led_mainloop();
  35   2                      freq_mainloop();
  36   2              }
  37   1      }
  38          //****************************
  39          void main_init()
  40          {
  41   1              u8 e2p_tep = 0;
  42   1              e2p_tep = r_e2prom(0x05);//     确认是否为第一次上电
  43   1              if(!e2p_tep)
  44   1              {
  45   2                      cj.jdq_cnt = r_e2prom(0x00);    //非第一次上电
  46   2              }else cj.jdq_cnt = 0;//第一次上电
  47   1              
  48   1              ne555_init();
  49   1              CMOD=CH=CL=0;//PCA_init
  50   1              Timer2_Init();
  51   1              Timer1_Init();
  52   1              init_ad(0x43);
  53   1              
  54   1              off(JDQ);off(FMQ);
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 14:05:46 PAGE 2   

  55   1              
  56   1              run_state = 10;
  57   1              //cj.jdq_cnt = 0;//jdq打开次数  0
  58   1              cj.wave_dat = 0;//超声波数据
  59   1              cj.wave_set = 60;//超声波参数   60
  60   1              cj.shidu_dat = 0;//湿度数据
  61   1              cj.shidu_set = 40;//湿度参数  40
  62   1              cj.ping_dat = 0;
  63   1              cj.ping_set = 90;//频率参数  90* 100
  64   1              cj.f_cm = 0;
  65   1              cj.f_khz = 0;
  66   1      }
  67          //****************************
  68          void state_mainloop()
  69          {
  70   1              if (!f_100ms_state)return;
  71   1              f_100ms_state = 0;
  72   1              cj.ping_dat = ping_dat;
  73   1              switch (run_state)
  74   1              {
  75   2                      case 10: // 频率
  76   2                              if(!cj.f_khz)
  77   2                              {
  78   3                                      sprintf(dis_str,"F %6u",cj.ping_dat);                           
  79   3                              }else
  80   2                              {
  81   3                                      sprintf(dis_str,"F %7.1f",cj.ping_dat/1000.0);          
  82   3                              }               
  83   2                              break;
  84   2                      //
  85   2                      case 20: // 湿度
  86   2                              sprintf(dis_str,"H     %2d",(u16)cj.shidu_dat); 
  87   2                              break;
  88   2                      //
  89   2                      case 30: // 测距
  90   2                              if(!cj.f_cm)
  91   2                              {
  92   3                                      sprintf(dis_str,"A    %3d",cj.wave_dat);                                
  93   3                              }else
  94   2                              {
  95   3                                      sprintf(dis_str,"A    %4.2f",cj.wave_dat/100.00);               
  96   3                              }       
  97   2                              break;
  98   2                      //
  99   2                      case 40: // 频率参数
 100   2                              sprintf(dis_str,"P1   %4.1f",cj.ping_set/10.0); 
 101   2                              break;
 102   2                      //
 103   2                      case 41: // 湿度参数
 104   2                              sprintf(dis_str,"P2    %2d",(int)cj.shidu_set); 
 105   2                              break;
 106   2                      //
 107   2                      case 42: // 距离参数
 108   2                              sprintf(dis_str,"P3    %3.1f",cj.wave_set/100.0);       
 109   2                              break;
 110   2                      //
 111   2              }       
 112   1              disp_proc();
 113   1      }
 114          //****************************
 115          void key_mainloop()
 116          {
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 14:05:46 PAGE 3   

 117   1              if (!f_20ms_key) return;
 118   1              f_20ms_key = 0;
 119   1              key_proc();
 120   1              
 121   1              if(!key_code)return;
 122   1              
 123   1              switch(key_code)
 124   1              {
 125   2                      case 4:
 126   2                              switch(run_state)
 127   2                              {
 128   3                                      case 10:run_state = 20;break;
 129   3                                      case 20:run_state = 30;break;
 130   3                                      case 30:run_state = 40;break;
 131   3                                      
 132   3                                      case 40:
 133   3                                      case 41:
 134   3                                      case 42:run_state = 10;break;
 135   3                              }
 136   2                              break;
 137   2                      //      
 138   2                      case 5:
 139   2                              switch(run_state)
 140   2                              {
 141   3                                      case 40:run_state = 41;break;
 142   3                                      case 41:run_state = 42;break;
 143   3                                      case 42:run_state = 40;break;
 144   3                              }
 145   2                              break;
 146   2                      //
 147   2                      case 6:
 148   2                              switch(run_state)
 149   2                              {
 150   3                                      case 30:cj.f_cm = ~cj.f_cm;break;
 151   3                                      case 40:cj.ping_set += 5;if(cj.ping_set > 120) cj.ping_set = 10;break;
 152   3                                      case 41:cj.shidu_set += 10;if(cj.shidu_set > 60) cj.shidu_set = 10;break;
 153   3                                      case 42:cj.wave_set += 10;if(cj.wave_set > 120) cj.wave_set = 10;break;
 154   3                              }
 155   2                              break;                  
 156   2                      //      
 157   2                      case 7:
 158   2                              switch(run_state)
 159   2                              {
 160   3                                      case 10:cj.f_khz = ~cj.f_khz;break;
 161   3                                      case 40:cj.ping_set -= 5;if(cj.ping_set < 10) cj.ping_set = 120;break;
 162   3                                      case 41:cj.shidu_set -= 10;if(cj.shidu_set < 10) cj.shidu_set = 60;break;
 163   3                                      case 42:cj.wave_set -= 10;if(cj.wave_set < 10) cj.wave_set = 120;break;
 164   3                              }
 165   2                              break;  
 166   2                      //
 167   2                      case S77:
 168   2                              switch(run_state)//仅湿度显示下
 169   2                              {
 170   3                                      case 20:cj.jdq_cnt = 0; w_e2prom(0x00,0);//保存继电器次数                       
 171   3                              }
 172   2                              break;
 173   2              }
 174   1              key_code=0;
 175   1      }
 176          //******************************
 177          void adc_mainloop(void)
 178          {
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 14:05:46 PAGE 4   

 179   1              static bit f_jdq_on = 0;
 180   1              
 181   1              u8 temp = 0;
 182   1              float tmp=0;
 183   1              
 184   1              if(!f_100ms_adc)return;
 185   1              f_100ms_adc = 0;
 186   1              
 187   1              read_ad();
 188   1              temp = read_ad();
 189   1              cj.shidu_dat = 99*(u16)temp /255;
 190   1              
 191   1              //dac输出
 192   1              if(cj.shidu_dat >= 80)
 193   1              {
 194   2                      write_dac(255);
 195   2              }else if(cj.shidu_dat <= cj.shidu_set)
 196   1              {
 197   2                      write_dac(51);
 198   2              }else 
 199   1              {
 200   2                      tmp = (4.0*((u16)cj.shidu_dat-80.0)/(80.0-(float)cj.shidu_set)+5);//函数计算
 201   2                      temp = tmp*51;//转化为ad数
 202   2                      write_dac(temp);//转换为16进制
 203   2              }
 204   1              
 205   1              //继电器开关
 206   1              if(cj.wave_dat > cj.wave_set && f_jdq_on==0)
 207   1              {
 208   2                      on(JDQ);f_jdq_on = 1;cj.jdq_cnt++;
 209   2                      w_e2prom(0x05,0);//确认程序已上电且保存值
 210   2                      w_e2prom(0x00,(u8)cj.jdq_cnt);//保存继电器次数
 211   2              }else if(cj.wave_dat < cj.wave_set && f_jdq_on==1)
 212   1              {
 213   2                      off(JDQ);f_jdq_on = 0;cj.jdq_cnt++;
 214   2                      w_e2prom(0x05,0);//确认程序已上电且保存值
 215   2                      w_e2prom(0x00,(u8)cj.jdq_cnt);//保存继电器次数
 216   2              }
 217   1      }
 218          //****************************
 219          void wave_mainloop()
 220          {
 221   1              if(!f_100ms_wave)return;
 222   1              f_100ms_wave = 0;
 223   1              
 224   1      
 225   1              cj.wave_dat = read_d()*0.017f;//读超声波
 226   1              if(cj.wave_dat >=200)cj.wave_dat =200;//限幅
 227   1      }
 228          //****************************
 229          void led_mainloop()
 230          {
 231   1              if (!f_50ms_led)return;
 232   1              f_50ms_led = 0;
 233   1              
 234   1              led_dat=0;
 235   1              switch(run_state)
 236   1              {
 237   2                      case 10:
 238   2                              L1=1;
 239   2                      break;
 240   2                      
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2024 14:05:46 PAGE 5   

 241   2                      case 20:
 242   2                              L2=1;
 243   2                      break;
 244   2                      
 245   2                      case 30:
 246   2                              L3=1;
 247   2                      break;
 248   2                      
 249   2                      case 40:
 250   2                              L1=f_on;
 251   2                      break;
 252   2                      
 253   2                      case 41:
 254   2                              L2=f_on;
 255   2                      break;
 256   2                      
 257   2                      case 42:
 258   2                              L3=f_on;
 259   2                      break;
 260   2              }
 261   1              //
 262   1              if(cj.ping_dat > cj.ping_set*100)
 263   1                      L4 = 1;
 264   1      
 265   1              if(cj.shidu_dat > cj.shidu_set)
 266   1                      L5 = 1;
 267   1      
 268   1              if(cj.wave_dat > cj.wave_set)
 269   1                      L6 = 1;
 270   1      
 271   1      }
 272          //****************************
 273          void freq_mainloop(void)
 274          {
 275   1              if(!f_freq) return;
 276   1              f_freq=0;
 277   1              
 278   1              if(cj.ping_dat > cj.ping_set*100)pwm_set = 4;
 279   1              else pwm_set = 1;
 280   1      }
 281          
 282          
 283          
 284          
 285          
 286          
 287          
 288          
 289          
 290          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1374    ----
   CONSTANT SIZE    =     77    ----
   XDATA SIZE       =     15    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
