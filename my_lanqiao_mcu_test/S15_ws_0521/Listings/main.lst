C51 COMPILER V9.60.7.0   MAIN                                                              05/22/2024 19:17:15 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc51\c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "all.h"
   2          xdata struct caiji cj;
   3          //
   4          volatile u8 bdata led_dat = 0;
   5          sbit L1 = led_dat ^ 0;
   6          sbit L2 = led_dat ^ 1;
   7          sbit L3 = led_dat ^ 2;
   8          sbit L4 = led_dat ^ 3;
   9          sbit L5 = led_dat ^ 4;
  10          sbit L6 = led_dat ^ 5;
  11          sbit L7 = led_dat ^ 6;
  12          sbit L8 = led_dat ^ 7;
  13          //
  14          u8 run_state=10;
  15          bit f_cj=0; //0-未采集 1-采集
  16          //
  17          void main_init();
  18          void state_mainloop();
  19          void key_mainloop();
  20          void rtc_mainloop();
  21          void led_mainloop();
  22          void freq_mainloop();
  23          void dac_out();
  24          //******************
  25          void main()
  26          {
  27   1              main_init();
  28   1              EA=1;
  29   1              while(1)
  30   1              {
  31   2                      state_mainloop();
  32   2                      key_mainloop();
  33   2                      rtc_mainloop();
  34   2                      freq_mainloop();
  35   2                      led_mainloop();
  36   2              }
  37   1      }
  38          //*******************
  39          void main_init()
  40          {
  41   1              off(JDQ); off(FMQ);
  42   1              ne555_Init();
  43   1              Timer1_Init();
  44   1              
  45   1              cj.f=-100;
  46   1              cj.f_lim=2000;
  47   1              cj.f_jiao=0;
  48   1              cj.f_max=0;
  49   1              cj.h_save=0;
  50   1              cj.m_save=0;
  51   1              cj.s_save=0;
  52   1              cj.h=20;
  53   1              cj.m=20;
  54   1              cj.s=20;
C51 COMPILER V9.60.7.0   MAIN                                                              05/22/2024 19:17:15 PAGE 2   

  55   1              
  56   1              rtc_init();
  57   1              rtc_run(0x00,0x00,0x00);
  58   1      }
  59          //*******************
  60          void state_mainloop()
  61          {
  62   1              if(!f_100ms_state) return;
  63   1              f_100ms_state=0;
  64   1              
  65   1              switch(run_state)
  66   1              {
  67   2                      case 10: //数据显示界面 频率
  68   2                              if(cj.f>0) sprintf(dis_str,"F  %5ld",cj.f);
  69   2                              else sprintf(dis_str,"F     LL");
  70   2                      break;
  71   2                      
  72   2                      case 20: //参数界面 超限参数
  73   2                              sprintf(dis_str,"P1  %4u",cj.f_lim_tmp);
  74   2                      break;
  75   2                      
  76   2                      case 21: //参数界面 校准值
  77   2                              sprintf(dis_str,"P2  %4d",cj.f_jiao_tmp);
  78   2                      break;
  79   2                      
  80   2                      case 30: //时间界面
  81   2                              sprintf(dis_str,"%02bu-%02bu-%02bu",cj.h,cj.m,cj.s);
  82   2                      break;
  83   2                      
  84   2                      case 40: //回显界面 最大频率
  85   2                              if(f_cj) sprintf(dis_str,"HF %5u",cj.f_max);
  86   2                              else sprintf(dis_str,"HF      ");
  87   2                      break;
  88   2                      
  89   2                      case 41: //回显界面 时间
  90   2                              if(f_cj) sprintf(dis_str,"HA%02bu%02bu%02bu",cj.h_save,cj.m_save,cj.s_save);
  91   2                              else sprintf(dis_str,"HA      ");
  92   2                      break;
  93   2              }
  94   1              disp_proc();
  95   1      }
  96          //*******************
  97          void key_mainloop()
  98          {
  99   1              if(!f_20ms_key) return;
 100   1              f_20ms_key=0;
 101   1              key_proc();
 102   1              
 103   1              if(!key_code) return;
 104   1              
 105   1              switch(key_code)
 106   1              {
 107   2                      case 4:
 108   2                              switch(run_state)
 109   2                              {
 110   3                                      case 10: 
 111   3                                              run_state=20; 
 112   3                                              cj.f_lim_tmp=cj.f_lim; cj.f_jiao_tmp=cj.f_jiao;
 113   3                                      break;
 114   3                                      
 115   3                                      case 20:
 116   3                                      case 21: 
C51 COMPILER V9.60.7.0   MAIN                                                              05/22/2024 19:17:15 PAGE 3   

 117   3                                              run_state=30; 
 118   3                                              cj.f_lim=cj.f_lim_tmp; cj.f_jiao=cj.f_jiao_tmp;
 119   3                                      break;
 120   3                                      
 121   3                                      case 30: run_state=40; break;
 122   3                                              
 123   3                                      case 40:
 124   3                                      case 41: run_state=10; break;
 125   3                              }
 126   2                      break;
 127   2                      
 128   2                      case 5:
 129   2                              switch(run_state)
 130   2                              {
 131   3                                      case 20: run_state=21; break;
 132   3                                      case 21: run_state=20; break;
 133   3                                      case 40: run_state=41; break;
 134   3                                      case 41: run_state=40; break;
 135   3                              }
 136   2                      break;
 137   2                      
 138   2                      case 8:
 139   2                              switch(run_state)
 140   2                              {
 141   3                                      case 20: cj.f_lim_tmp+=1000; if(cj.f_lim_tmp>9000) cj.f_lim_tmp=9000; break;
 142   3                                      case 21: cj.f_jiao_tmp+=100; if(cj.f_jiao_tmp>900) cj.f_jiao_tmp=900; break;
 143   3                              }
 144   2                      break;
 145   2                      
 146   2                      case 9:
 147   2                              switch(run_state)
 148   2                              {
 149   3                                      case 20: cj.f_lim_tmp-=1000; if(cj.f_lim_tmp<1000) cj.f_lim_tmp=1000; break;
 150   3                                      case 21: cj.f_jiao_tmp-=100; if(cj.f_jiao_tmp<-900) cj.f_jiao_tmp=-900; break;
 151   3                              }
 152   2                      break;  
 153   2              }
 154   1              
 155   1              key_code=0;
 156   1      }
 157          //*******************
 158          void rtc_mainloop()
 159          {
 160   1              u8 h,m,s;
 161   1              static u8 old_s;
 162   1              
 163   1              if(!f_100ms_rtc) return;
 164   1              f_100ms_rtc=0;
 165   1              
 166   1              h=Read_Ds1302_Byte(0x85);
 167   1              m=Read_Ds1302_Byte(0x83);
 168   1              s=Read_Ds1302_Byte(0x81);
 169   1      
 170   1              if(old_s==s) return;
 171   1              old_s=s;
 172   1              
 173   1              cj.h=((h>>4)*10)+(h&0x0f);
 174   1              cj.m=((m>>4)*10)+(m&0x0f);
 175   1              cj.s=((s>>4)*10)+(s&0x0f);
 176   1      }
 177          //*******************
 178          void freq_mainloop()
C51 COMPILER V9.60.7.0   MAIN                                                              05/22/2024 19:17:15 PAGE 4   

 179          {
 180   1              if(!f_100ms_freq) return;
 181   1              f_100ms_freq=0;
 182   1              
 183   1              cj.f=(long int)freq+cj.f_jiao;
 184   1              
 185   1              if(cj.f>=0) dac_out();
 186   1              else write_dac(0);
 187   1              
 188   1              if(cj.f>cj.f_max)
 189   1              {
 190   2                      f_cj=1;
 191   2                      cj.f_max=cj.f;
 192   2                      cj.h_save=cj.h_save;
 193   2                      cj.m_save=cj.m_save;
 194   2                      cj.s_save=cj.s_save;
 195   2              }
 196   1      }
 197          //*******************
 198          void dac_out()
 199          {
 200   1              if(cj.f<=500) cj.da_v=1;
 201   1              else if(cj.f>=cj.f_lim) cj.da_v=5;
 202   1              else cj.da_v=4.0/(cj.f_lim-500.0)+1.0;
 203   1              
 204   1              cj.da_dat=cj.da_v/5.0*255;
 205   1              write_dac(cj.da_dat);
 206   1      }
 207          //*******************
 208          void led_mainloop()
 209          {
 210   1              if(!f_100ms_led)return;
 211   1              f_100ms_led=0;
 212   1              led_dat=0;
 213   1              
 214   1              switch(run_state)
 215   1              {
 216   2                      case 10: L1=!L1; break;
 217   2              }
 218   1              
 219   1              if(cj.f>cj.f_lim) L2=!L2;
 220   1              
 221   1              if(cj.f<0) L2=1;
 222   1              
 223   1      }
 224          //*******************
 225          
 226          //*******************
 227          
 228          //*******************
 229          
 230          
 231          
 232          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1175    ----
   CONSTANT SIZE    =     94    ----
   XDATA SIZE       =     25    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       2
C51 COMPILER V9.60.7.0   MAIN                                                              05/22/2024 19:17:15 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
