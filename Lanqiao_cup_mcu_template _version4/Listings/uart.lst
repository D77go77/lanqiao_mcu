C51 COMPILER V9.59.0.0   UART                                                              12/25/2024 10:06:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Software\Keilv5\Keil\Core\C51\BIN\C51.EXE Drivers\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Drive
                    -rs) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "uart.h"
   2          xdata struct _uu uu;
   3          void Uart1_Isr(void) interrupt 4
   4          {
   5   1              if (TI)                         //检测串口1发送中断
   6   1              {
   7   2                      TI = 0;                 //清除串口1发送中断请求位
   8   2              }
   9   1              if (RI)                         //检测串口1接收中断
  10   1              {
  11   2                      RI = 0;                 //清除串口1接收中断请求位
  12   2                      uu.buf[uu.i++]=SBUF;
  13   2                      uu.f=1;
  14   2                      uu.ton=1;
  15   2              }
  16   1      }
  17          
  18          void Uart1_Init(void)   //4800bps@12.000MHz
  19          {
  20   1              SCON = 0x50;            //8位数据,可变波特率
  21   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器
  22   1              AUXR |= 0x04;           //定时器时钟1T模式
  23   1              T2L = 0x8F;                     //设置定时初始值
  24   1              T2H = 0xFD;                     //设置定时初始值
  25   1              AUXR |= 0x10;           //定时器2开始计时
  26   1      //      P_SW1 = (P_SW1 &~WEI)|LED;//P_SW1 = (P_SW1 & ~0xc0) | 0x80;             //UART1/USART1: RxD(P1.6), TxD(P1.7)
  27   1              ES = 1;                         //使能串口1中断
  28   1      }
  29          
  30          void uu_init()
  31          {
  32   1              uu. f=0;
  33   1              uu. i=0;
  34   1              uu. t=0;
  35   1              uu. ton=0;
  36   1              uu. cmd=0;
  37   1      }
  38          
  39          /**
  40           * 处理UART通信的函数
  41           * 该函数根据接收的数据决定响应的操作
  42           */
  43          void uart_proc()
  44          {
  45   1          // 检查是否有待处理的数据
  46   1          if(uu.f)
  47   1          {
  48   2              uu.f=0;
  49   2              // 根据接收的数据长度决定如何处理
  50   2              switch(uu.i)
  51   2              {
  52   3                  case 3:
  53   3                      // 当接收的数据以'A'开头，后面紧跟回车和换行符时，设置命令为1
  54   3                      if(uu.buf[0]=='A'&&uu.buf[1]=='\r'&&uu.buf[2]=='\n')
C51 COMPILER V9.59.0.0   UART                                                              12/25/2024 10:06:55 PAGE 2   

  55   3                          uu.cmd=1;
  56   3                      else
  57   3                          // 否则设置命令为2，表示接收到的数据不符合预期格式
  58   3                          uu.cmd=2;
  59   3                      break;
  60   3              }
  61   2          }
  62   1          // 如果有命令待执行
  63   1          if(uu.cmd)
  64   1          {
  65   2              // 禁用串口中断，防止在发送过程中被中断
  66   2              ES=0;TI=1;
  67   2              // 根据命令执行相应的操作
  68   2              switch(uu.cmd)
  69   2              {
  70   3                  case 1:printf("hello\r\n");break;
  71   3                  case 2:printf("error\r\n");break;
  72   3              }
  73   2              // 重新启用串口中断，准备接收下一次数据
  74   2              ES=1;TI=0;
  75   2              // 重置UART相关的状态和缓冲区
  76   2              uu_init();
  77   2          }
  78   1      }
  79          //***************
  80          void uart_timeout(void)
  81          {
  82   1              // 如果uu.ton标志位为真，则执行定时关断逻辑
  83   1          if (uu.ton) {
  84   2              if (++uu.t >= 5) {
  85   3                  uu.cmd = 2; // 设置命令为2
  86   3              }
  87   2          }
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
