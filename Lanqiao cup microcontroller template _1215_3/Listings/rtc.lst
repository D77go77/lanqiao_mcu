C51 COMPILER V9.59.0.0   RTC                                                               12/16/2024 17:10:15 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN .\Objects\rtc.obj
COMPILER INVOKED BY: C:\Software\Keilv5\Keil\Core\C51\BIN\C51.EXE rtc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\rtc.lst) OBJECT(.\Objects\rtc.obj)

line level    source

   1          /*      #       DS1302代码片段说明
   2                  1.      本文件夹中提供的驱动代码供参赛选手完成程序设计参考。
   3                  2.      参赛选手可以自行编写相关代码或以该代码为基础，根据所选单片机类型、运行速度和试题
   4                          中对单片机时钟频率的要求，进行代码调试和修改。
   5          */                                                              
   6          #include "rtc.h"
   7          //
   8          void Write_Ds1302(unsigned  char temp) 
   9          {
  10   1              unsigned char i;
  11   1              for (i=0;i<8;i++)       
  12   1              { 
  13   2                      SCK = 0;
  14   2                      SDA = temp&0x01;
  15   2                      temp>>=1; 
  16   2                      SCK=1;
  17   2              }
  18   1      }   
  19          
  20          //
  21          void Write_Ds1302_Byte( unsigned char address,unsigned char dat )     
  22          {
  23   1              RST=0;  _nop_();
  24   1              SCK=0;  _nop_();
  25   1              RST=1;  _nop_();  
  26   1              Write_Ds1302(address);  
  27   1              Write_Ds1302(dat);              
  28   1              RST=0; 
  29   1      }
  30          
  31          //
  32          unsigned char Read_Ds1302_Byte ( unsigned char address )
  33          {
  34   1              unsigned char i,temp=0x00;
  35   1              RST=0;  _nop_();
  36   1              SCK=0;  _nop_();
  37   1              RST=1;  _nop_();
  38   1              Write_Ds1302(address);
  39   1              for (i=0;i<8;i++)       
  40   1              {               
  41   2                      SCK=0;
  42   2                      temp>>=1;       
  43   2                      if(SDA)
  44   2                      temp|=0x80;     
  45   2                      SCK=1;
  46   2              } 
  47   1              RST=0;  _nop_();
  48   1              SCK=0;  _nop_();
  49   1              SCK=1;  _nop_();
  50   1              SDA=0;  _nop_();
  51   1              SDA=1;  _nop_();
  52   1              return (temp);                  
  53   1      }
  54          
C51 COMPILER V9.59.0.0   RTC                                                               12/16/2024 17:10:15 PAGE 2   

  55          /**
  56           * 设置实时时钟（RTC）的时间
  57           *
  58           * @param h 小时，范围0-23
  59           * @param m 分钟，范围0-59
  60           * @param s 秒钟，范围0-59
  61           *
  62           * 此函数通过写入DS1302芯片来设置RTC的时间。它首先停止RTC，然后分别设置小时、分钟和秒钟，
  63           * 最后重新启动RTC。
  64           */
  65          void rtc_run(u8 h, u8 m, u8 s)
  66          {
  67   1          // 停止RTC
  68   1          Write_Ds1302_Byte(0x8e, 0);
  69   1          // 设置小时
  70   1          Write_Ds1302_Byte(0x84, h);
  71   1          // 设置分钟
  72   1          Write_Ds1302_Byte(0x82, m);
  73   1          // 设置秒钟
  74   1          Write_Ds1302_Byte(0x80, s);
  75   1          // 重新启动RTC
  76   1          Write_Ds1302_Byte(0x8e, 0x80);
  77   1      }
  78          
  79          /**
  80           * 读取实时时钟（RTC）的时间
  81           *
  82           * 此函数从DS1302芯片读取当前的时间，并将其转换为十进制格式存储在全局变量cj中。
  83           */
  84          void rtc_proc()
  85          {
  86   1          u8 h, m, s;
  87   1          
  88   1          // 禁用中断
  89   1          EA = 0;
  90   1          // 读取小时
  91   1          h = Read_Ds1302_Byte(0x85);
  92   1          // 读取分钟
  93   1          m = Read_Ds1302_Byte(0x83);
  94   1          // 读取秒钟
  95   1          s = Read_Ds1302_Byte(0x81);
  96   1          // 恢复中断
  97   1          EA = 1;
  98   1          
  99   1          // 将BCD码转换为十进制并存储在cj中
 100   1          cj.h = (h >> 4) * 10 + (h & 0x0f);
 101   1          cj.m = (m >> 4) * 10 + (m & 0x0f);
 102   1          cj.s = (s >> 4) * 10 + (s & 0x0f);
 103   1      }
 104          
 105          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.59.0.0   RTC                                                               12/16/2024 17:10:15 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
